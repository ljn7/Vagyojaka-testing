name: MacOS Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-13
    
    env:
      QT_VERSION: "6.6.1"
      MACOSX_DEPLOYMENT_TARGET: "12.0"
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        modules: 'qtmultimedia qtpositioning qtwebchannel'
        tools: 'tools_cmake tools_ninja'
        cache: true
        aqtversion: '==3.1.*'

    - name: Install dependencies
      run: |
        brew update
        brew install cmake pkg-config
        brew install libgit2
        brew install fftw
        brew install ffmpeg
        brew install webp
        brew install jpeg-xl

    - name: Create build directory
      run: mkdir build
    
    - name: Configure CMake
      working-directory: ./build
      env:
        Qt6_DIR: ${{ env.Qt6_DIR }}
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0
    
    - name: Build
      working-directory: ./build
      run: |
        cmake --build . --config Release -j$(sysctl -n hw.ncpu)
    
    - name: Package
      working-directory: ./build
      run: |
        cd output
        
        # Update Info.plist
        cat > Vagyojaka.app/Contents/Info.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>Vagyojaka</string>
            <key>CFBundleIconFile</key>
            <string>AppIcon.icns</string>
            <key>CFBundleIdentifier</key>
            <string>com.vagyojaka.app</string>
            <key>CFBundleName</key>
            <string>Vagyojaka</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>${GITHUB_REF_NAME:-1.0.0}</string>
            <key>LSMinimumSystemVersion</key>
            <string>12.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # Create frameworks directory if it doesn't exist
        mkdir -p Vagyojaka.app/Contents/Frameworks
        
        # Function to copy library and its dependencies
        copy_library() {
          local lib=$1
          if [ -f "$lib" ]; then
            cp -L "$lib" Vagyojaka.app/Contents/Frameworks/
            # Get dependencies
            otool -L "$lib" | tail -n +2 | cut -d' ' -f1 | while read -r dep; do
              if [[ "$dep" == @rpath/* ]] || [[ "$dep" == /usr/local/* ]]; then
                local depname=$(basename "$dep")
                if [ -f "/usr/local/lib/$depname" ]; then
                  cp -L "/usr/local/lib/$depname" Vagyojaka.app/Contents/Frameworks/
                fi
              fi
            done
          fi
        }
        
        # Copy FFmpeg and related libraries
        BREW_PREFIX=$(brew --prefix)
        for lib in \
          libavcodec.*.dylib \
          libavdevice.*.dylib \
          libavfilter.*.dylib \
          libavformat.*.dylib \
          libavutil.*.dylib \
          libswresample.*.dylib \
          libswscale.*.dylib \
          libsharpyuv.*.dylib \
          libwebp.*.dylib \
          libwebpmux.*.dylib \
          libjxl.*.dylib \
          libjxl_cms.*.dylib \
          libgit2.*.dylib \
          libfftw3.*.dylib; do
          find "$BREW_PREFIX" -name "$lib" -exec cp -L {} Vagyojaka.app/Contents/Frameworks/ \;
        done
        
        # Fix library paths
        find Vagyojaka.app/Contents/Frameworks -name "*.dylib" -type f | while read -r lib; do
          chmod u+w "$lib"
          # Fix ID
          install_name_tool -id "@rpath/$(basename "$lib")" "$lib"
          # Fix dependencies
          otool -L "$lib" | tail -n +2 | cut -d' ' -f1 | while read -r dep; do
            if [[ "$dep" == /usr/local/* ]] || [[ "$dep" == @rpath/* ]]; then
              local depname=$(basename "$dep")
              install_name_tool -change "$dep" "@rpath/$depname" "$lib" || true
            fi
          done
        done
        
        # Run macdeployqt after fixing libraries
        macdeployqt Vagyojaka.app -verbose=2 -dmg -always-overwrite
        
        # Rename DMG if this is a release
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          mv Vagyojaka.dmg "Vagyojaka-${{ github.ref_name }}-macos.dmg"
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Vagyojaka-macOS
        path: build/output/Vagyojaka*.dmg

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/output/Vagyojaka*.dmg
        draft: false
        prerelease: false
        generate_release_notes: true
