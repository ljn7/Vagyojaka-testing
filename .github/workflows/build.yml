name: MacOS Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-13
    
    env:
      QT_VERSION: "6.6.1"
      MACOSX_DEPLOYMENT_TARGET: "12.0"
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        modules: 'qtmultimedia qtpositioning qtwebchannel'
        tools: 'tools_cmake tools_ninja'
        cache: true
        aqtversion: '==3.1.*'

    - name: Install dependencies
      run: |
        brew update
        brew install cmake pkg-config
        brew install libgit2
        brew install fftw
        brew install ffmpeg
        brew install webp
        brew install jpeg-xl
        brew install sdl2
        brew install libsoxr

    - name: Create build directory
      run: mkdir build
    
    - name: Configure CMake
      working-directory: ./build
      env:
        Qt6_DIR: ${{ env.Qt6_DIR }}
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
          -DCMAKE_INSTALL_RPATH="@executable_path/../Frameworks"
    
    - name: Build
      working-directory: ./build
      run: |
        cmake --build . --config Release -j$(sysctl -n hw.ncpu)
    
    - name: Package
      working-directory: ./build
      run: |
        cd output
        
        # Verify app exists and set up directory structure
        if [ ! -d "Vagyojaka.app" ]; then
          echo "Error: Vagyojaka.app not found"
          exit 1
        fi
        
        # Create and verify Frameworks directory
        mkdir -p "Vagyojaka.app/Contents/Frameworks"
        if [ ! -d "Vagyojaka.app/Contents/Frameworks" ]; then
          echo "Error: Failed to create Frameworks directory"
          exit 1
        fi
        
        # Set permissions
        chmod -R 755 "Vagyojaka.app"
        chmod 755 "Vagyojaka.app/Contents/Frameworks"

        # Enhanced function to copy library and its dependencies
        copy_lib_with_deps() {
          local lib=$1
          if [ ! -f "$lib" ]; then 
            echo "Warning: Library $lib not found"
            return 
          fi
          
          local basename=$(basename "$lib")
          local dest="Vagyojaka.app/Contents/Frameworks/$basename"
          
          echo "Attempting to copy $lib to $dest"
          
          # Create parent directories if they don't exist
          mkdir -p "$(dirname "$dest")"
          
          # Copy the library if not already copied
          if [ ! -f "$dest" ]; then
            # Use cp -f to force copy and -P to preserve links
            cp -f -P "$lib" "Vagyojaka.app/Contents/Frameworks/" || {
              echo "Error: Failed to copy $lib to Frameworks directory"
              return 1
            }
            
            # Verify the copy succeeded
            if [ ! -f "$dest" ]; then
              echo "Error: File $dest does not exist after copy"
              return 1
            }
            
            chmod 755 "$dest" || {
              echo "Error: Failed to set permissions on $dest"
              return 1
            }
            
            # Fix the library's ID
            install_name_tool -id "@rpath/$basename" "$dest" || {
              echo "Error: Failed to update library ID for $dest"
              return 1
            }
            
            # Process dependencies
            otool -L "$lib" | tail -n +2 | awk '{print $1}' | grep -E '^(/usr/local/|/opt/homebrew/)' | while read dep; do
              local depbase=$(basename "$dep")
              install_name_tool -change "$dep" "@rpath/$depbase" "$dest"
              
              # Search for dependencies in multiple locations
              for prefix in /usr/local/lib /opt/homebrew/lib /usr/local/opt/*/lib /opt/homebrew/opt/*/lib; do
                if [ -f "$prefix/$depbase" ]; then
                  echo "Found dependency $depbase in $prefix"
                  copy_lib_with_deps "$prefix/$depbase"
                  break
                fi
              done
            done
          fi
        }

        # List current directory contents for debugging
        echo "Current directory contents:"
        ls -la
        
        echo "Vagyojaka.app contents:"
        ls -la Vagyojaka.app
        
        echo "Contents directory contents:"
        ls -la Vagyojaka.app/Contents
        
        # Explicitly copy FFmpeg libraries first
        echo "Copying FFmpeg libraries..."
        ffmpeg_prefix=$(brew --prefix ffmpeg)
        echo "FFmpeg prefix: $ffmpeg_prefix"
        find "$ffmpeg_prefix/lib" -name "*.dylib" -type f | while read lib; do
          echo "Processing FFmpeg library: $lib"
          copy_lib_with_deps "$lib" || {
            echo "Error: Failed to process $lib"
            exit 1
          }
        done

        # Copy other required libraries
        for formula in webp jpeg-xl sdl2 libsoxr libgit2 fftw; do
          echo "Processing formula: $formula"
          prefix=$(brew --prefix $formula)
          find "$prefix/lib" -name "*.dylib" -type f | while read lib; do
            copy_lib_with_deps "$lib" || {
              echo "Error: Failed to process $lib"
              exit 1
            }
          done
        done

        # Verify and fix executable's library references
        if [ ! -f "Vagyojaka.app/Contents/MacOS/Vagyojaka" ]; then
          echo "Error: Executable not found"
          exit 1
        fi
        
        chmod 755 "Vagyojaka.app/Contents/MacOS/Vagyojaka"
        otool -L "Vagyojaka.app/Contents/MacOS/Vagyojaka" | tail -n +2 | awk '{print $1}' | grep -E '^(/usr/local/|/opt/homebrew/)' | while read dep; do
          install_name_tool -change "$dep" "@rpath/$(basename "$dep")" "Vagyojaka.app/Contents/MacOS/Vagyojaka"
        done

        # Run macdeployqt
        macdeployqt Vagyojaka.app -verbose=2 -always-overwrite
        macdeployqt Vagyojaka.app -verbose=2 -dmg -always-overwrite

        if [[ -f Vagyojaka.dmg ]]; then
          chmod 644 Vagyojaka.dmg
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            mv Vagyojaka.dmg "Vagyojaka-${{ github.ref_name }}-macos.dmg"
            chmod 644 "Vagyojaka-${{ github.ref_name }}-macos.dmg"
          fi
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Vagyojaka-macOS
        path: build/output/Vagyojaka*.dmg

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/output/Vagyojaka*.dmg
        draft: false
        prerelease: false
        generate_release_notes: true
