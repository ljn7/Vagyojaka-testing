name: MacOS Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-13
    
    env:
      QT_VERSION: "6.6.1"
      MACOSX_DEPLOYMENT_TARGET: "12.0"
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        modules: 'qtmultimedia qtpositioning qtwebchannel'
        tools: 'tools_cmake tools_ninja'
        cache: true
        aqtversion: '==3.1.*'

    - name: Install dependencies
      run: |
        brew update
        brew install cmake pkg-config
        brew install libgit2
        brew install fftw
        brew install ffmpeg
        brew install webp
        brew install jpeg-xl
        brew install sdl2
        brew install libsoxr
        brew install libx11
        brew install libxcb
        brew install libxau
        brew install libxdmcp
        brew install libxext
        brew install libxfixes

    - name: Create build directory
      run: mkdir build
    
    - name: Configure CMake
      working-directory: ./build
      env:
        Qt6_DIR: ${{ env.Qt6_DIR }}
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 \
          -DCMAKE_INSTALL_RPATH="@executable_path/../Frameworks"
    
    - name: Build
      working-directory: ./build
      run: |
        cmake --build . --config Release -j$(sysctl -n hw.ncpu)
    
    - name: Package
      working-directory: ./build
      run: |
        cd output
        
        sudo chmod -R 755 Vagyojaka.app
        
        # Create app bundle structure
        sudo mkdir -p Vagyojaka.app/Contents/Frameworks
        sudo mkdir -p Vagyojaka.app/Contents/Plugins
        sudo chmod 755 Vagyojaka.app/Contents/Frameworks
        sudo chmod 755 Vagyojaka.app/Contents/Plugins
        
        # Copy all dependencies from Homebrew
        brew_libs=(
            'ffmpeg'
            'webp'
            'jpeg-xl'
            'sdl2'
            'libsoxr'
            'libgit2'
            'fftw'
        )
        
        for formula in "${brew_libs[@]}"; do
          lib_path="$(brew --prefix $formula)/lib"
          if [ -d "$lib_path" ]; then
            sudo cp -a "$lib_path"/*.dylib Vagyojaka.app/Contents/Frameworks/ 2>/dev/null || true
          fi
        done
        
        # Fix library paths
        frameworks_path="Vagyojaka.app/Contents/Frameworks"
        executables=(
          "Vagyojaka.app/Contents/MacOS/Vagyojaka"
          "${frameworks_path}"/*.dylib
        )
        
        for file in "${executables[@]}"; do
          if [ -f "$file" ]; then
            sudo chmod +w "$file"
            
            # Update the file's own ID if it's a dylib
            if [[ "$file" == *.dylib ]]; then
              sudo install_name_tool -id "@rpath/$(basename "$file")" "$file"
            fi
            
            # Update all dependencies
            otool -L "$file" | tail -n +2 | while read -r line; do
              dep=$(echo "$line" | awk '{print $1}')
              base_dep=$(basename "$dep")
              
              if [[ "$dep" == /usr/local/* ]] || [[ "$dep" == /opt/homebrew/* ]] || [[ "$dep" == "@rpath/"* ]]; then
                if [ -f "${frameworks_path}/${base_dep}" ]; then
                  sudo install_name_tool -change "$dep" "@rpath/${base_dep}" "$file" || true
                fi
              fi
            done
          fi
        done
        
        # Run macdeployqt
        sudo macdeployqt Vagyojaka.app -verbose=2 -always-overwrite
        
        # Create DMG
        sudo macdeployqt Vagyojaka.app -dmg
        
        if [[ -f Vagyojaka.dmg ]]; then
          sudo chmod 644 Vagyojaka.dmg
        fi
        
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          sudo mv Vagyojaka.dmg "Vagyojaka-${{ github.ref_name }}-macos.dmg"
          sudo chmod 644 "Vagyojaka-${{ github.ref_name }}-macos.dmg"
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Vagyojaka-macOS
        path: build/output/Vagyojaka*.dmg

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/output/Vagyojaka*.dmg
        draft: false
        prerelease: false
        generate_release_notes: true
